/****************************************************************************
** Meta object code from reading C++ file 'testqgsfiledownloader.cpp'
**
** Created by: The Qt Meta Object Compiler version 67 (Qt 5.9.5)
**
** WARNING! All changes made in this file will be lost!
*****************************************************************************/

#include <QtCore/qbytearray.h>
#include <QtCore/qmetatype.h>
#if !defined(Q_MOC_OUTPUT_REVISION)
#error "The header file 'testqgsfiledownloader.cpp' doesn't include <QObject>."
#elif Q_MOC_OUTPUT_REVISION != 67
#error "This file was generated using the moc from 5.9.5. It"
#error "cannot be used with the include files from this version of Qt."
#error "(The moc has changed too much.)"
#endif

QT_BEGIN_MOC_NAMESPACE
QT_WARNING_PUSH
QT_WARNING_DISABLE_DEPRECATED
struct qt_meta_stringdata_TestQgsFileDownloader_t {
    QByteArrayData data[23];
    char stringdata0[350];
};
#define QT_MOC_LITERAL(idx, ofs, len) \
    Q_STATIC_BYTE_ARRAY_DATA_HEADER_INITIALIZER_WITH_OFFSET(len, \
    qptrdiff(offsetof(qt_meta_stringdata_TestQgsFileDownloader_t, stringdata0) + ofs \
        - idx * sizeof(QByteArrayData)) \
    )
static const qt_meta_stringdata_TestQgsFileDownloader_t qt_meta_stringdata_TestQgsFileDownloader = {
    {
QT_MOC_LITERAL(0, 0, 21), // "TestQgsFileDownloader"
QT_MOC_LITERAL(1, 22, 17), // "downloadCompleted"
QT_MOC_LITERAL(2, 40, 0), // ""
QT_MOC_LITERAL(3, 41, 14), // "downloadExited"
QT_MOC_LITERAL(4, 56, 16), // "downloadCanceled"
QT_MOC_LITERAL(5, 73, 13), // "downloadError"
QT_MOC_LITERAL(6, 87, 13), // "errorMessages"
QT_MOC_LITERAL(7, 101, 16), // "downloadProgress"
QT_MOC_LITERAL(8, 118, 13), // "bytesReceived"
QT_MOC_LITERAL(9, 132, 10), // "bytesTotal"
QT_MOC_LITERAL(10, 143, 12), // "initTestCase"
QT_MOC_LITERAL(11, 156, 15), // "cleanupTestCase"
QT_MOC_LITERAL(12, 172, 4), // "init"
QT_MOC_LITERAL(13, 177, 7), // "cleanup"
QT_MOC_LITERAL(14, 185, 17), // "testValidDownload"
QT_MOC_LITERAL(15, 203, 19), // "testInValidDownload"
QT_MOC_LITERAL(16, 223, 15), // "testInvalidFile"
QT_MOC_LITERAL(17, 239, 20), // "testCanceledDownload"
QT_MOC_LITERAL(18, 260, 14), // "testInvalidUrl"
QT_MOC_LITERAL(19, 275, 12), // "testBlankUrl"
QT_MOC_LITERAL(20, 288, 30), // "testLacksWritePermissionsError"
QT_MOC_LITERAL(21, 319, 17), // "testSslError_data"
QT_MOC_LITERAL(22, 337, 12) // "testSslError"

    },
    "TestQgsFileDownloader\0downloadCompleted\0"
    "\0downloadExited\0downloadCanceled\0"
    "downloadError\0errorMessages\0"
    "downloadProgress\0bytesReceived\0"
    "bytesTotal\0initTestCase\0cleanupTestCase\0"
    "init\0cleanup\0testValidDownload\0"
    "testInValidDownload\0testInvalidFile\0"
    "testCanceledDownload\0testInvalidUrl\0"
    "testBlankUrl\0testLacksWritePermissionsError\0"
    "testSslError_data\0testSslError"
};
#undef QT_MOC_LITERAL

static const uint qt_meta_data_TestQgsFileDownloader[] = {

 // content:
       7,       // revision
       0,       // classname
       0,    0, // classinfo
      18,   14, // methods
       0,    0, // properties
       0,    0, // enums/sets
       0,    0, // constructors
       0,       // flags
       0,       // signalCount

 // slots: name, argc, parameters, tag, flags
       1,    0,  104,    2, 0x0a /* Public */,
       3,    0,  105,    2, 0x0a /* Public */,
       4,    0,  106,    2, 0x0a /* Public */,
       5,    1,  107,    2, 0x0a /* Public */,
       7,    2,  110,    2, 0x0a /* Public */,
      10,    0,  115,    2, 0x08 /* Private */,
      11,    0,  116,    2, 0x08 /* Private */,
      12,    0,  117,    2, 0x08 /* Private */,
      13,    0,  118,    2, 0x08 /* Private */,
      14,    0,  119,    2, 0x08 /* Private */,
      15,    0,  120,    2, 0x08 /* Private */,
      16,    0,  121,    2, 0x08 /* Private */,
      17,    0,  122,    2, 0x08 /* Private */,
      18,    0,  123,    2, 0x08 /* Private */,
      19,    0,  124,    2, 0x08 /* Private */,
      20,    0,  125,    2, 0x08 /* Private */,
      21,    0,  126,    2, 0x08 /* Private */,
      22,    0,  127,    2, 0x08 /* Private */,

 // slots: parameters
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void, QMetaType::QStringList,    6,
    QMetaType::Void, QMetaType::LongLong, QMetaType::LongLong,    8,    9,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,

       0        // eod
};

void TestQgsFileDownloader::qt_static_metacall(QObject *_o, QMetaObject::Call _c, int _id, void **_a)
{
    if (_c == QMetaObject::InvokeMetaMethod) {
        TestQgsFileDownloader *_t = static_cast<TestQgsFileDownloader *>(_o);
        Q_UNUSED(_t)
        switch (_id) {
        case 0: _t->downloadCompleted(); break;
        case 1: _t->downloadExited(); break;
        case 2: _t->downloadCanceled(); break;
        case 3: _t->downloadError((*reinterpret_cast< QStringList(*)>(_a[1]))); break;
        case 4: _t->downloadProgress((*reinterpret_cast< qint64(*)>(_a[1])),(*reinterpret_cast< qint64(*)>(_a[2]))); break;
        case 5: _t->initTestCase(); break;
        case 6: _t->cleanupTestCase(); break;
        case 7: _t->init(); break;
        case 8: _t->cleanup(); break;
        case 9: _t->testValidDownload(); break;
        case 10: _t->testInValidDownload(); break;
        case 11: _t->testInvalidFile(); break;
        case 12: _t->testCanceledDownload(); break;
        case 13: _t->testInvalidUrl(); break;
        case 14: _t->testBlankUrl(); break;
        case 15: _t->testLacksWritePermissionsError(); break;
        case 16: _t->testSslError_data(); break;
        case 17: _t->testSslError(); break;
        default: ;
        }
    }
}

const QMetaObject TestQgsFileDownloader::staticMetaObject = {
    { &QObject::staticMetaObject, qt_meta_stringdata_TestQgsFileDownloader.data,
      qt_meta_data_TestQgsFileDownloader,  qt_static_metacall, nullptr, nullptr}
};


const QMetaObject *TestQgsFileDownloader::metaObject() const
{
    return QObject::d_ptr->metaObject ? QObject::d_ptr->dynamicMetaObject() : &staticMetaObject;
}

void *TestQgsFileDownloader::qt_metacast(const char *_clname)
{
    if (!_clname) return nullptr;
    if (!strcmp(_clname, qt_meta_stringdata_TestQgsFileDownloader.stringdata0))
        return static_cast<void*>(this);
    return QObject::qt_metacast(_clname);
}

int TestQgsFileDownloader::qt_metacall(QMetaObject::Call _c, int _id, void **_a)
{
    _id = QObject::qt_metacall(_c, _id, _a);
    if (_id < 0)
        return _id;
    if (_c == QMetaObject::InvokeMetaMethod) {
        if (_id < 18)
            qt_static_metacall(this, _c, _id, _a);
        _id -= 18;
    } else if (_c == QMetaObject::RegisterMethodArgumentMetaType) {
        if (_id < 18)
            *reinterpret_cast<int*>(_a[0]) = -1;
        _id -= 18;
    }
    return _id;
}
QT_WARNING_POP
QT_END_MOC_NAMESPACE
