/****************************************************************************
** Meta object code from reading C++ file 'testqgslayoutitem.cpp'
**
** Created by: The Qt Meta Object Compiler version 67 (Qt 5.9.5)
**
** WARNING! All changes made in this file will be lost!
*****************************************************************************/

#include <QtCore/qbytearray.h>
#include <QtCore/qmetatype.h>
#if !defined(Q_MOC_OUTPUT_REVISION)
#error "The header file 'testqgslayoutitem.cpp' doesn't include <QObject>."
#elif Q_MOC_OUTPUT_REVISION != 67
#error "This file was generated using the moc from 5.9.5. It"
#error "cannot be used with the include files from this version of Qt."
#error "(The moc has changed too much.)"
#endif

QT_BEGIN_MOC_NAMESPACE
QT_WARNING_PUSH
QT_WARNING_DISABLE_DEPRECATED
struct qt_meta_stringdata_TestItem_t {
    QByteArrayData data[1];
    char stringdata0[9];
};
#define QT_MOC_LITERAL(idx, ofs, len) \
    Q_STATIC_BYTE_ARRAY_DATA_HEADER_INITIALIZER_WITH_OFFSET(len, \
    qptrdiff(offsetof(qt_meta_stringdata_TestItem_t, stringdata0) + ofs \
        - idx * sizeof(QByteArrayData)) \
    )
static const qt_meta_stringdata_TestItem_t qt_meta_stringdata_TestItem = {
    {
QT_MOC_LITERAL(0, 0, 8) // "TestItem"

    },
    "TestItem"
};
#undef QT_MOC_LITERAL

static const uint qt_meta_data_TestItem[] = {

 // content:
       7,       // revision
       0,       // classname
       0,    0, // classinfo
       0,    0, // methods
       0,    0, // properties
       0,    0, // enums/sets
       0,    0, // constructors
       0,       // flags
       0,       // signalCount

       0        // eod
};

void TestItem::qt_static_metacall(QObject *_o, QMetaObject::Call _c, int _id, void **_a)
{
    Q_UNUSED(_o);
    Q_UNUSED(_id);
    Q_UNUSED(_c);
    Q_UNUSED(_a);
}

const QMetaObject TestItem::staticMetaObject = {
    { &QgsLayoutItem::staticMetaObject, qt_meta_stringdata_TestItem.data,
      qt_meta_data_TestItem,  qt_static_metacall, nullptr, nullptr}
};


const QMetaObject *TestItem::metaObject() const
{
    return QObject::d_ptr->metaObject ? QObject::d_ptr->dynamicMetaObject() : &staticMetaObject;
}

void *TestItem::qt_metacast(const char *_clname)
{
    if (!_clname) return nullptr;
    if (!strcmp(_clname, qt_meta_stringdata_TestItem.stringdata0))
        return static_cast<void*>(this);
    return QgsLayoutItem::qt_metacast(_clname);
}

int TestItem::qt_metacall(QMetaObject::Call _c, int _id, void **_a)
{
    _id = QgsLayoutItem::qt_metacall(_c, _id, _a);
    return _id;
}
struct qt_meta_stringdata_MinSizedItem_t {
    QByteArrayData data[1];
    char stringdata0[13];
};
#define QT_MOC_LITERAL(idx, ofs, len) \
    Q_STATIC_BYTE_ARRAY_DATA_HEADER_INITIALIZER_WITH_OFFSET(len, \
    qptrdiff(offsetof(qt_meta_stringdata_MinSizedItem_t, stringdata0) + ofs \
        - idx * sizeof(QByteArrayData)) \
    )
static const qt_meta_stringdata_MinSizedItem_t qt_meta_stringdata_MinSizedItem = {
    {
QT_MOC_LITERAL(0, 0, 12) // "MinSizedItem"

    },
    "MinSizedItem"
};
#undef QT_MOC_LITERAL

static const uint qt_meta_data_MinSizedItem[] = {

 // content:
       7,       // revision
       0,       // classname
       0,    0, // classinfo
       0,    0, // methods
       0,    0, // properties
       0,    0, // enums/sets
       0,    0, // constructors
       0,       // flags
       0,       // signalCount

       0        // eod
};

void MinSizedItem::qt_static_metacall(QObject *_o, QMetaObject::Call _c, int _id, void **_a)
{
    Q_UNUSED(_o);
    Q_UNUSED(_id);
    Q_UNUSED(_c);
    Q_UNUSED(_a);
}

const QMetaObject MinSizedItem::staticMetaObject = {
    { &TestItem::staticMetaObject, qt_meta_stringdata_MinSizedItem.data,
      qt_meta_data_MinSizedItem,  qt_static_metacall, nullptr, nullptr}
};


const QMetaObject *MinSizedItem::metaObject() const
{
    return QObject::d_ptr->metaObject ? QObject::d_ptr->dynamicMetaObject() : &staticMetaObject;
}

void *MinSizedItem::qt_metacast(const char *_clname)
{
    if (!_clname) return nullptr;
    if (!strcmp(_clname, qt_meta_stringdata_MinSizedItem.stringdata0))
        return static_cast<void*>(this);
    return TestItem::qt_metacast(_clname);
}

int MinSizedItem::qt_metacall(QMetaObject::Call _c, int _id, void **_a)
{
    _id = TestItem::qt_metacall(_c, _id, _a);
    return _id;
}
struct qt_meta_stringdata_FixedSizedItem_t {
    QByteArrayData data[1];
    char stringdata0[15];
};
#define QT_MOC_LITERAL(idx, ofs, len) \
    Q_STATIC_BYTE_ARRAY_DATA_HEADER_INITIALIZER_WITH_OFFSET(len, \
    qptrdiff(offsetof(qt_meta_stringdata_FixedSizedItem_t, stringdata0) + ofs \
        - idx * sizeof(QByteArrayData)) \
    )
static const qt_meta_stringdata_FixedSizedItem_t qt_meta_stringdata_FixedSizedItem = {
    {
QT_MOC_LITERAL(0, 0, 14) // "FixedSizedItem"

    },
    "FixedSizedItem"
};
#undef QT_MOC_LITERAL

static const uint qt_meta_data_FixedSizedItem[] = {

 // content:
       7,       // revision
       0,       // classname
       0,    0, // classinfo
       0,    0, // methods
       0,    0, // properties
       0,    0, // enums/sets
       0,    0, // constructors
       0,       // flags
       0,       // signalCount

       0        // eod
};

void FixedSizedItem::qt_static_metacall(QObject *_o, QMetaObject::Call _c, int _id, void **_a)
{
    Q_UNUSED(_o);
    Q_UNUSED(_id);
    Q_UNUSED(_c);
    Q_UNUSED(_a);
}

const QMetaObject FixedSizedItem::staticMetaObject = {
    { &TestItem::staticMetaObject, qt_meta_stringdata_FixedSizedItem.data,
      qt_meta_data_FixedSizedItem,  qt_static_metacall, nullptr, nullptr}
};


const QMetaObject *FixedSizedItem::metaObject() const
{
    return QObject::d_ptr->metaObject ? QObject::d_ptr->dynamicMetaObject() : &staticMetaObject;
}

void *FixedSizedItem::qt_metacast(const char *_clname)
{
    if (!_clname) return nullptr;
    if (!strcmp(_clname, qt_meta_stringdata_FixedSizedItem.stringdata0))
        return static_cast<void*>(this);
    return TestItem::qt_metacast(_clname);
}

int FixedSizedItem::qt_metacall(QMetaObject::Call _c, int _id, void **_a)
{
    _id = TestItem::qt_metacall(_c, _id, _a);
    return _id;
}
struct qt_meta_stringdata_FixedMinSizedItem_t {
    QByteArrayData data[1];
    char stringdata0[18];
};
#define QT_MOC_LITERAL(idx, ofs, len) \
    Q_STATIC_BYTE_ARRAY_DATA_HEADER_INITIALIZER_WITH_OFFSET(len, \
    qptrdiff(offsetof(qt_meta_stringdata_FixedMinSizedItem_t, stringdata0) + ofs \
        - idx * sizeof(QByteArrayData)) \
    )
static const qt_meta_stringdata_FixedMinSizedItem_t qt_meta_stringdata_FixedMinSizedItem = {
    {
QT_MOC_LITERAL(0, 0, 17) // "FixedMinSizedItem"

    },
    "FixedMinSizedItem"
};
#undef QT_MOC_LITERAL

static const uint qt_meta_data_FixedMinSizedItem[] = {

 // content:
       7,       // revision
       0,       // classname
       0,    0, // classinfo
       0,    0, // methods
       0,    0, // properties
       0,    0, // enums/sets
       0,    0, // constructors
       0,       // flags
       0,       // signalCount

       0        // eod
};

void FixedMinSizedItem::qt_static_metacall(QObject *_o, QMetaObject::Call _c, int _id, void **_a)
{
    Q_UNUSED(_o);
    Q_UNUSED(_id);
    Q_UNUSED(_c);
    Q_UNUSED(_a);
}

const QMetaObject FixedMinSizedItem::staticMetaObject = {
    { &TestItem::staticMetaObject, qt_meta_stringdata_FixedMinSizedItem.data,
      qt_meta_data_FixedMinSizedItem,  qt_static_metacall, nullptr, nullptr}
};


const QMetaObject *FixedMinSizedItem::metaObject() const
{
    return QObject::d_ptr->metaObject ? QObject::d_ptr->dynamicMetaObject() : &staticMetaObject;
}

void *FixedMinSizedItem::qt_metacast(const char *_clname)
{
    if (!_clname) return nullptr;
    if (!strcmp(_clname, qt_meta_stringdata_FixedMinSizedItem.stringdata0))
        return static_cast<void*>(this);
    return TestItem::qt_metacast(_clname);
}

int FixedMinSizedItem::qt_metacall(QMetaObject::Call _c, int _id, void **_a)
{
    _id = TestItem::qt_metacall(_c, _id, _a);
    return _id;
}
struct qt_meta_stringdata_TestQgsLayoutItem_t {
    QByteArrayData data[42];
    char stringdata0[554];
};
#define QT_MOC_LITERAL(idx, ofs, len) \
    Q_STATIC_BYTE_ARRAY_DATA_HEADER_INITIALIZER_WITH_OFFSET(len, \
    qptrdiff(offsetof(qt_meta_stringdata_TestQgsLayoutItem_t, stringdata0) + ofs \
        - idx * sizeof(QByteArrayData)) \
    )
static const qt_meta_stringdata_TestQgsLayoutItem_t qt_meta_stringdata_TestQgsLayoutItem = {
    {
QT_MOC_LITERAL(0, 0, 17), // "TestQgsLayoutItem"
QT_MOC_LITERAL(1, 18, 12), // "initTestCase"
QT_MOC_LITERAL(2, 31, 0), // ""
QT_MOC_LITERAL(3, 32, 15), // "cleanupTestCase"
QT_MOC_LITERAL(4, 48, 4), // "init"
QT_MOC_LITERAL(5, 53, 7), // "cleanup"
QT_MOC_LITERAL(6, 61, 8), // "creation"
QT_MOC_LITERAL(7, 70, 4), // "uuid"
QT_MOC_LITERAL(8, 75, 2), // "id"
QT_MOC_LITERAL(9, 78, 8), // "registry"
QT_MOC_LITERAL(10, 87, 15), // "shouldDrawDebug"
QT_MOC_LITERAL(11, 103, 21), // "shouldDrawAntialiased"
QT_MOC_LITERAL(12, 125, 14), // "preparePainter"
QT_MOC_LITERAL(13, 140, 9), // "debugRect"
QT_MOC_LITERAL(14, 150, 4), // "draw"
QT_MOC_LITERAL(15, 155, 6), // "resize"
QT_MOC_LITERAL(16, 162, 14), // "referencePoint"
QT_MOC_LITERAL(17, 177, 26), // "itemPositionReferencePoint"
QT_MOC_LITERAL(18, 204, 23), // "adjustPointForReference"
QT_MOC_LITERAL(19, 228, 24), // "positionAtReferencePoint"
QT_MOC_LITERAL(20, 253, 9), // "fixedSize"
QT_MOC_LITERAL(21, 263, 7), // "minSize"
QT_MOC_LITERAL(22, 271, 4), // "move"
QT_MOC_LITERAL(23, 276, 17), // "positionWithUnits"
QT_MOC_LITERAL(24, 294, 13), // "sizeWithUnits"
QT_MOC_LITERAL(25, 308, 19), // "dataDefinedPosition"
QT_MOC_LITERAL(26, 328, 15), // "dataDefinedSize"
QT_MOC_LITERAL(27, 344, 34), // "combinedDataDefinedPositionAn..."
QT_MOC_LITERAL(28, 379, 8), // "rotation"
QT_MOC_LITERAL(29, 388, 8), // "writeXml"
QT_MOC_LITERAL(30, 397, 7), // "readXml"
QT_MOC_LITERAL(31, 405, 22), // "writeReadXmlProperties"
QT_MOC_LITERAL(32, 428, 8), // "undoRedo"
QT_MOC_LITERAL(33, 437, 13), // "multiItemUndo"
QT_MOC_LITERAL(34, 451, 15), // "overlappingUndo"
QT_MOC_LITERAL(35, 467, 9), // "blendMode"
QT_MOC_LITERAL(36, 477, 7), // "opacity"
QT_MOC_LITERAL(37, 485, 18), // "excludeFromExports"
QT_MOC_LITERAL(38, 504, 12), // "setSceneRect"
QT_MOC_LITERAL(39, 517, 4), // "page"
QT_MOC_LITERAL(40, 522, 21), // "itemVariablesFunction"
QT_MOC_LITERAL(41, 544, 9) // "variables"

    },
    "TestQgsLayoutItem\0initTestCase\0\0"
    "cleanupTestCase\0init\0cleanup\0creation\0"
    "uuid\0id\0registry\0shouldDrawDebug\0"
    "shouldDrawAntialiased\0preparePainter\0"
    "debugRect\0draw\0resize\0referencePoint\0"
    "itemPositionReferencePoint\0"
    "adjustPointForReference\0"
    "positionAtReferencePoint\0fixedSize\0"
    "minSize\0move\0positionWithUnits\0"
    "sizeWithUnits\0dataDefinedPosition\0"
    "dataDefinedSize\0combinedDataDefinedPositionAndSize\0"
    "rotation\0writeXml\0readXml\0"
    "writeReadXmlProperties\0undoRedo\0"
    "multiItemUndo\0overlappingUndo\0blendMode\0"
    "opacity\0excludeFromExports\0setSceneRect\0"
    "page\0itemVariablesFunction\0variables"
};
#undef QT_MOC_LITERAL

static const uint qt_meta_data_TestQgsLayoutItem[] = {

 // content:
       7,       // revision
       0,       // classname
       0,    0, // classinfo
      40,   14, // methods
       0,    0, // properties
       0,    0, // enums/sets
       0,    0, // constructors
       0,       // flags
       0,       // signalCount

 // slots: name, argc, parameters, tag, flags
       1,    0,  214,    2, 0x08 /* Private */,
       3,    0,  215,    2, 0x08 /* Private */,
       4,    0,  216,    2, 0x08 /* Private */,
       5,    0,  217,    2, 0x08 /* Private */,
       6,    0,  218,    2, 0x08 /* Private */,
       7,    0,  219,    2, 0x08 /* Private */,
       8,    0,  220,    2, 0x08 /* Private */,
       9,    0,  221,    2, 0x08 /* Private */,
      10,    0,  222,    2, 0x08 /* Private */,
      11,    0,  223,    2, 0x08 /* Private */,
      12,    0,  224,    2, 0x08 /* Private */,
      13,    0,  225,    2, 0x08 /* Private */,
      14,    0,  226,    2, 0x08 /* Private */,
      15,    0,  227,    2, 0x08 /* Private */,
      16,    0,  228,    2, 0x08 /* Private */,
      17,    0,  229,    2, 0x08 /* Private */,
      18,    0,  230,    2, 0x08 /* Private */,
      19,    0,  231,    2, 0x08 /* Private */,
      20,    0,  232,    2, 0x08 /* Private */,
      21,    0,  233,    2, 0x08 /* Private */,
      22,    0,  234,    2, 0x08 /* Private */,
      23,    0,  235,    2, 0x08 /* Private */,
      24,    0,  236,    2, 0x08 /* Private */,
      25,    0,  237,    2, 0x08 /* Private */,
      26,    0,  238,    2, 0x08 /* Private */,
      27,    0,  239,    2, 0x08 /* Private */,
      28,    0,  240,    2, 0x08 /* Private */,
      29,    0,  241,    2, 0x08 /* Private */,
      30,    0,  242,    2, 0x08 /* Private */,
      31,    0,  243,    2, 0x08 /* Private */,
      32,    0,  244,    2, 0x08 /* Private */,
      33,    0,  245,    2, 0x08 /* Private */,
      34,    0,  246,    2, 0x08 /* Private */,
      35,    0,  247,    2, 0x08 /* Private */,
      36,    0,  248,    2, 0x08 /* Private */,
      37,    0,  249,    2, 0x08 /* Private */,
      38,    0,  250,    2, 0x08 /* Private */,
      39,    0,  251,    2, 0x08 /* Private */,
      40,    0,  252,    2, 0x08 /* Private */,
      41,    0,  253,    2, 0x08 /* Private */,

 // slots: parameters
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,

       0        // eod
};

void TestQgsLayoutItem::qt_static_metacall(QObject *_o, QMetaObject::Call _c, int _id, void **_a)
{
    if (_c == QMetaObject::InvokeMetaMethod) {
        TestQgsLayoutItem *_t = static_cast<TestQgsLayoutItem *>(_o);
        Q_UNUSED(_t)
        switch (_id) {
        case 0: _t->initTestCase(); break;
        case 1: _t->cleanupTestCase(); break;
        case 2: _t->init(); break;
        case 3: _t->cleanup(); break;
        case 4: _t->creation(); break;
        case 5: _t->uuid(); break;
        case 6: _t->id(); break;
        case 7: _t->registry(); break;
        case 8: _t->shouldDrawDebug(); break;
        case 9: _t->shouldDrawAntialiased(); break;
        case 10: _t->preparePainter(); break;
        case 11: _t->debugRect(); break;
        case 12: _t->draw(); break;
        case 13: _t->resize(); break;
        case 14: _t->referencePoint(); break;
        case 15: _t->itemPositionReferencePoint(); break;
        case 16: _t->adjustPointForReference(); break;
        case 17: _t->positionAtReferencePoint(); break;
        case 18: _t->fixedSize(); break;
        case 19: _t->minSize(); break;
        case 20: _t->move(); break;
        case 21: _t->positionWithUnits(); break;
        case 22: _t->sizeWithUnits(); break;
        case 23: _t->dataDefinedPosition(); break;
        case 24: _t->dataDefinedSize(); break;
        case 25: _t->combinedDataDefinedPositionAndSize(); break;
        case 26: _t->rotation(); break;
        case 27: _t->writeXml(); break;
        case 28: _t->readXml(); break;
        case 29: _t->writeReadXmlProperties(); break;
        case 30: _t->undoRedo(); break;
        case 31: _t->multiItemUndo(); break;
        case 32: _t->overlappingUndo(); break;
        case 33: _t->blendMode(); break;
        case 34: _t->opacity(); break;
        case 35: _t->excludeFromExports(); break;
        case 36: _t->setSceneRect(); break;
        case 37: _t->page(); break;
        case 38: _t->itemVariablesFunction(); break;
        case 39: _t->variables(); break;
        default: ;
        }
    }
    Q_UNUSED(_a);
}

const QMetaObject TestQgsLayoutItem::staticMetaObject = {
    { &QObject::staticMetaObject, qt_meta_stringdata_TestQgsLayoutItem.data,
      qt_meta_data_TestQgsLayoutItem,  qt_static_metacall, nullptr, nullptr}
};


const QMetaObject *TestQgsLayoutItem::metaObject() const
{
    return QObject::d_ptr->metaObject ? QObject::d_ptr->dynamicMetaObject() : &staticMetaObject;
}

void *TestQgsLayoutItem::qt_metacast(const char *_clname)
{
    if (!_clname) return nullptr;
    if (!strcmp(_clname, qt_meta_stringdata_TestQgsLayoutItem.stringdata0))
        return static_cast<void*>(this);
    return QObject::qt_metacast(_clname);
}

int TestQgsLayoutItem::qt_metacall(QMetaObject::Call _c, int _id, void **_a)
{
    _id = QObject::qt_metacall(_c, _id, _a);
    if (_id < 0)
        return _id;
    if (_c == QMetaObject::InvokeMetaMethod) {
        if (_id < 40)
            qt_static_metacall(this, _c, _id, _a);
        _id -= 40;
    } else if (_c == QMetaObject::RegisterMethodArgumentMetaType) {
        if (_id < 40)
            *reinterpret_cast<int*>(_a[0]) = -1;
        _id -= 40;
    }
    return _id;
}
QT_WARNING_POP
QT_END_MOC_NAMESPACE
