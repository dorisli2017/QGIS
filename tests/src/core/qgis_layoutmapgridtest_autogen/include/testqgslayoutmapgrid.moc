/****************************************************************************
** Meta object code from reading C++ file 'testqgslayoutmapgrid.cpp'
**
** Created by: The Qt Meta Object Compiler version 67 (Qt 5.9.5)
**
** WARNING! All changes made in this file will be lost!
*****************************************************************************/

#include <QtCore/qbytearray.h>
#include <QtCore/qmetatype.h>
#if !defined(Q_MOC_OUTPUT_REVISION)
#error "The header file 'testqgslayoutmapgrid.cpp' doesn't include <QObject>."
#elif Q_MOC_OUTPUT_REVISION != 67
#error "This file was generated using the moc from 5.9.5. It"
#error "cannot be used with the include files from this version of Qt."
#error "(The moc has changed too much.)"
#endif

QT_BEGIN_MOC_NAMESPACE
QT_WARNING_PUSH
QT_WARNING_DISABLE_DEPRECATED
struct qt_meta_stringdata_TestQgsLayoutMapGrid_t {
    QByteArrayData data[32];
    char stringdata0[509];
};
#define QT_MOC_LITERAL(idx, ofs, len) \
    Q_STATIC_BYTE_ARRAY_DATA_HEADER_INITIALIZER_WITH_OFFSET(len, \
    qptrdiff(offsetof(qt_meta_stringdata_TestQgsLayoutMapGrid_t, stringdata0) + ofs \
        - idx * sizeof(QByteArrayData)) \
    )
static const qt_meta_stringdata_TestQgsLayoutMapGrid_t qt_meta_stringdata_TestQgsLayoutMapGrid = {
    {
QT_MOC_LITERAL(0, 0, 20), // "TestQgsLayoutMapGrid"
QT_MOC_LITERAL(1, 21, 12), // "initTestCase"
QT_MOC_LITERAL(2, 34, 0), // ""
QT_MOC_LITERAL(3, 35, 15), // "cleanupTestCase"
QT_MOC_LITERAL(4, 51, 4), // "init"
QT_MOC_LITERAL(5, 56, 7), // "cleanup"
QT_MOC_LITERAL(6, 64, 4), // "grid"
QT_MOC_LITERAL(7, 69, 11), // "reprojected"
QT_MOC_LITERAL(8, 81, 9), // "crossGrid"
QT_MOC_LITERAL(9, 91, 10), // "markerGrid"
QT_MOC_LITERAL(10, 102, 9), // "frameOnly"
QT_MOC_LITERAL(11, 112, 10), // "zebraStyle"
QT_MOC_LITERAL(12, 123, 15), // "zebraStyleSides"
QT_MOC_LITERAL(13, 139, 16), // "zebraStyleMargin"
QT_MOC_LITERAL(14, 156, 18), // "zebraStyleNautical"
QT_MOC_LITERAL(15, 175, 14), // "frameDivisions"
QT_MOC_LITERAL(16, 190, 16), // "annotationFilter"
QT_MOC_LITERAL(17, 207, 13), // "interiorTicks"
QT_MOC_LITERAL(18, 221, 19), // "interiorTicksMargin"
QT_MOC_LITERAL(19, 241, 22), // "interiorTicksAnnotated"
QT_MOC_LITERAL(20, 264, 13), // "exteriorTicks"
QT_MOC_LITERAL(21, 278, 19), // "exteriorTicksMargin"
QT_MOC_LITERAL(22, 298, 22), // "exteriorTicksAnnotated"
QT_MOC_LITERAL(23, 321, 21), // "interiorExteriorTicks"
QT_MOC_LITERAL(24, 343, 27), // "interiorExteriorTicksMargin"
QT_MOC_LITERAL(25, 371, 30), // "interiorExteriorTicksAnnotated"
QT_MOC_LITERAL(26, 402, 10), // "lineBorder"
QT_MOC_LITERAL(27, 413, 16), // "lineBorderMargin"
QT_MOC_LITERAL(28, 430, 18), // "lineBorderNautical"
QT_MOC_LITERAL(29, 449, 19), // "lineBorderAnnotated"
QT_MOC_LITERAL(30, 469, 17), // "annotationFormats"
QT_MOC_LITERAL(31, 487, 21) // "descendingAnnotations"

    },
    "TestQgsLayoutMapGrid\0initTestCase\0\0"
    "cleanupTestCase\0init\0cleanup\0grid\0"
    "reprojected\0crossGrid\0markerGrid\0"
    "frameOnly\0zebraStyle\0zebraStyleSides\0"
    "zebraStyleMargin\0zebraStyleNautical\0"
    "frameDivisions\0annotationFilter\0"
    "interiorTicks\0interiorTicksMargin\0"
    "interiorTicksAnnotated\0exteriorTicks\0"
    "exteriorTicksMargin\0exteriorTicksAnnotated\0"
    "interiorExteriorTicks\0interiorExteriorTicksMargin\0"
    "interiorExteriorTicksAnnotated\0"
    "lineBorder\0lineBorderMargin\0"
    "lineBorderNautical\0lineBorderAnnotated\0"
    "annotationFormats\0descendingAnnotations"
};
#undef QT_MOC_LITERAL

static const uint qt_meta_data_TestQgsLayoutMapGrid[] = {

 // content:
       7,       // revision
       0,       // classname
       0,    0, // classinfo
      30,   14, // methods
       0,    0, // properties
       0,    0, // enums/sets
       0,    0, // constructors
       0,       // flags
       0,       // signalCount

 // slots: name, argc, parameters, tag, flags
       1,    0,  164,    2, 0x08 /* Private */,
       3,    0,  165,    2, 0x08 /* Private */,
       4,    0,  166,    2, 0x08 /* Private */,
       5,    0,  167,    2, 0x08 /* Private */,
       6,    0,  168,    2, 0x08 /* Private */,
       7,    0,  169,    2, 0x08 /* Private */,
       8,    0,  170,    2, 0x08 /* Private */,
       9,    0,  171,    2, 0x08 /* Private */,
      10,    0,  172,    2, 0x08 /* Private */,
      11,    0,  173,    2, 0x08 /* Private */,
      12,    0,  174,    2, 0x08 /* Private */,
      13,    0,  175,    2, 0x08 /* Private */,
      14,    0,  176,    2, 0x08 /* Private */,
      15,    0,  177,    2, 0x08 /* Private */,
      16,    0,  178,    2, 0x08 /* Private */,
      17,    0,  179,    2, 0x08 /* Private */,
      18,    0,  180,    2, 0x08 /* Private */,
      19,    0,  181,    2, 0x08 /* Private */,
      20,    0,  182,    2, 0x08 /* Private */,
      21,    0,  183,    2, 0x08 /* Private */,
      22,    0,  184,    2, 0x08 /* Private */,
      23,    0,  185,    2, 0x08 /* Private */,
      24,    0,  186,    2, 0x08 /* Private */,
      25,    0,  187,    2, 0x08 /* Private */,
      26,    0,  188,    2, 0x08 /* Private */,
      27,    0,  189,    2, 0x08 /* Private */,
      28,    0,  190,    2, 0x08 /* Private */,
      29,    0,  191,    2, 0x08 /* Private */,
      30,    0,  192,    2, 0x08 /* Private */,
      31,    0,  193,    2, 0x08 /* Private */,

 // slots: parameters
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,

       0        // eod
};

void TestQgsLayoutMapGrid::qt_static_metacall(QObject *_o, QMetaObject::Call _c, int _id, void **_a)
{
    if (_c == QMetaObject::InvokeMetaMethod) {
        TestQgsLayoutMapGrid *_t = static_cast<TestQgsLayoutMapGrid *>(_o);
        Q_UNUSED(_t)
        switch (_id) {
        case 0: _t->initTestCase(); break;
        case 1: _t->cleanupTestCase(); break;
        case 2: _t->init(); break;
        case 3: _t->cleanup(); break;
        case 4: _t->grid(); break;
        case 5: _t->reprojected(); break;
        case 6: _t->crossGrid(); break;
        case 7: _t->markerGrid(); break;
        case 8: _t->frameOnly(); break;
        case 9: _t->zebraStyle(); break;
        case 10: _t->zebraStyleSides(); break;
        case 11: _t->zebraStyleMargin(); break;
        case 12: _t->zebraStyleNautical(); break;
        case 13: _t->frameDivisions(); break;
        case 14: _t->annotationFilter(); break;
        case 15: _t->interiorTicks(); break;
        case 16: _t->interiorTicksMargin(); break;
        case 17: _t->interiorTicksAnnotated(); break;
        case 18: _t->exteriorTicks(); break;
        case 19: _t->exteriorTicksMargin(); break;
        case 20: _t->exteriorTicksAnnotated(); break;
        case 21: _t->interiorExteriorTicks(); break;
        case 22: _t->interiorExteriorTicksMargin(); break;
        case 23: _t->interiorExteriorTicksAnnotated(); break;
        case 24: _t->lineBorder(); break;
        case 25: _t->lineBorderMargin(); break;
        case 26: _t->lineBorderNautical(); break;
        case 27: _t->lineBorderAnnotated(); break;
        case 28: _t->annotationFormats(); break;
        case 29: _t->descendingAnnotations(); break;
        default: ;
        }
    }
    Q_UNUSED(_a);
}

const QMetaObject TestQgsLayoutMapGrid::staticMetaObject = {
    { &QObject::staticMetaObject, qt_meta_stringdata_TestQgsLayoutMapGrid.data,
      qt_meta_data_TestQgsLayoutMapGrid,  qt_static_metacall, nullptr, nullptr}
};


const QMetaObject *TestQgsLayoutMapGrid::metaObject() const
{
    return QObject::d_ptr->metaObject ? QObject::d_ptr->dynamicMetaObject() : &staticMetaObject;
}

void *TestQgsLayoutMapGrid::qt_metacast(const char *_clname)
{
    if (!_clname) return nullptr;
    if (!strcmp(_clname, qt_meta_stringdata_TestQgsLayoutMapGrid.stringdata0))
        return static_cast<void*>(this);
    return QObject::qt_metacast(_clname);
}

int TestQgsLayoutMapGrid::qt_metacall(QMetaObject::Call _c, int _id, void **_a)
{
    _id = QObject::qt_metacall(_c, _id, _a);
    if (_id < 0)
        return _id;
    if (_c == QMetaObject::InvokeMetaMethod) {
        if (_id < 30)
            qt_static_metacall(this, _c, _id, _a);
        _id -= 30;
    } else if (_c == QMetaObject::RegisterMethodArgumentMetaType) {
        if (_id < 30)
            *reinterpret_cast<int*>(_a[0]) = -1;
        _id -= 30;
    }
    return _id;
}
QT_WARNING_POP
QT_END_MOC_NAMESPACE
