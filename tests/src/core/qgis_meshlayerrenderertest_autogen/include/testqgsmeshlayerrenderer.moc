/****************************************************************************
** Meta object code from reading C++ file 'testqgsmeshlayerrenderer.cpp'
**
** Created by: The Qt Meta Object Compiler version 67 (Qt 5.9.5)
**
** WARNING! All changes made in this file will be lost!
*****************************************************************************/

#include <QtCore/qbytearray.h>
#include <QtCore/qmetatype.h>
#if !defined(Q_MOC_OUTPUT_REVISION)
#error "The header file 'testqgsmeshlayerrenderer.cpp' doesn't include <QObject>."
#elif Q_MOC_OUTPUT_REVISION != 67
#error "This file was generated using the moc from 5.9.5. It"
#error "cannot be used with the include files from this version of Qt."
#error "(The moc has changed too much.)"
#endif

QT_BEGIN_MOC_NAMESPACE
QT_WARNING_PUSH
QT_WARNING_DISABLE_DEPRECATED
struct qt_meta_stringdata_TestQgsMeshRenderer_t {
    QByteArrayData data[22];
    char stringdata0[451];
};
#define QT_MOC_LITERAL(idx, ofs, len) \
    Q_STATIC_BYTE_ARRAY_DATA_HEADER_INITIALIZER_WITH_OFFSET(len, \
    qptrdiff(offsetof(qt_meta_stringdata_TestQgsMeshRenderer_t, stringdata0) + ofs \
        - idx * sizeof(QByteArrayData)) \
    )
static const qt_meta_stringdata_TestQgsMeshRenderer_t qt_meta_stringdata_TestQgsMeshRenderer = {
    {
QT_MOC_LITERAL(0, 0, 19), // "TestQgsMeshRenderer"
QT_MOC_LITERAL(1, 20, 12), // "initTestCase"
QT_MOC_LITERAL(2, 33, 0), // ""
QT_MOC_LITERAL(3, 34, 15), // "cleanupTestCase"
QT_MOC_LITERAL(4, 50, 4), // "init"
QT_MOC_LITERAL(5, 55, 7), // "cleanup"
QT_MOC_LITERAL(6, 63, 10), // "imageCheck"
QT_MOC_LITERAL(7, 74, 8), // "testType"
QT_MOC_LITERAL(8, 83, 13), // "QgsMeshLayer*"
QT_MOC_LITERAL(9, 97, 5), // "layer"
QT_MOC_LITERAL(10, 103, 8), // "readFile"
QT_MOC_LITERAL(11, 112, 5), // "fname"
QT_MOC_LITERAL(12, 118, 26), // "test_native_mesh_rendering"
QT_MOC_LITERAL(13, 145, 30), // "test_triangular_mesh_rendering"
QT_MOC_LITERAL(14, 176, 36), // "test_vertex_scalar_dataset_re..."
QT_MOC_LITERAL(15, 213, 36), // "test_vertex_vector_dataset_re..."
QT_MOC_LITERAL(16, 250, 34), // "test_face_scalar_dataset_rend..."
QT_MOC_LITERAL(17, 285, 34), // "test_face_vector_dataset_rend..."
QT_MOC_LITERAL(18, 320, 55), // "test_vertex_scalar_dataset_wi..."
QT_MOC_LITERAL(19, 376, 29), // "test_face_vector_on_user_grid"
QT_MOC_LITERAL(20, 406, 31), // "test_vertex_vector_on_user_grid"
QT_MOC_LITERAL(21, 438, 12) // "test_signals"

    },
    "TestQgsMeshRenderer\0initTestCase\0\0"
    "cleanupTestCase\0init\0cleanup\0imageCheck\0"
    "testType\0QgsMeshLayer*\0layer\0readFile\0"
    "fname\0test_native_mesh_rendering\0"
    "test_triangular_mesh_rendering\0"
    "test_vertex_scalar_dataset_rendering\0"
    "test_vertex_vector_dataset_rendering\0"
    "test_face_scalar_dataset_rendering\0"
    "test_face_vector_dataset_rendering\0"
    "test_vertex_scalar_dataset_with_inactive_face_rendering\0"
    "test_face_vector_on_user_grid\0"
    "test_vertex_vector_on_user_grid\0"
    "test_signals"
};
#undef QT_MOC_LITERAL

static const uint qt_meta_data_TestQgsMeshRenderer[] = {

 // content:
       7,       // revision
       0,       // classname
       0,    0, // classinfo
      16,   14, // methods
       0,    0, // properties
       0,    0, // enums/sets
       0,    0, // constructors
       0,       // flags
       0,       // signalCount

 // slots: name, argc, parameters, tag, flags
       1,    0,   94,    2, 0x08 /* Private */,
       3,    0,   95,    2, 0x08 /* Private */,
       4,    0,   96,    2, 0x08 /* Private */,
       5,    0,   97,    2, 0x08 /* Private */,
       6,    2,   98,    2, 0x08 /* Private */,
      10,    1,  103,    2, 0x08 /* Private */,
      12,    0,  106,    2, 0x08 /* Private */,
      13,    0,  107,    2, 0x08 /* Private */,
      14,    0,  108,    2, 0x08 /* Private */,
      15,    0,  109,    2, 0x08 /* Private */,
      16,    0,  110,    2, 0x08 /* Private */,
      17,    0,  111,    2, 0x08 /* Private */,
      18,    0,  112,    2, 0x08 /* Private */,
      19,    0,  113,    2, 0x08 /* Private */,
      20,    0,  114,    2, 0x08 /* Private */,
      21,    0,  115,    2, 0x08 /* Private */,

 // slots: parameters
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Bool, QMetaType::QString, 0x80000000 | 8,    7,    9,
    QMetaType::QString, QMetaType::QString,   11,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,

       0        // eod
};

void TestQgsMeshRenderer::qt_static_metacall(QObject *_o, QMetaObject::Call _c, int _id, void **_a)
{
    if (_c == QMetaObject::InvokeMetaMethod) {
        TestQgsMeshRenderer *_t = static_cast<TestQgsMeshRenderer *>(_o);
        Q_UNUSED(_t)
        switch (_id) {
        case 0: _t->initTestCase(); break;
        case 1: _t->cleanupTestCase(); break;
        case 2: _t->init(); break;
        case 3: _t->cleanup(); break;
        case 4: { bool _r = _t->imageCheck((*reinterpret_cast< const QString(*)>(_a[1])),(*reinterpret_cast< QgsMeshLayer*(*)>(_a[2])));
            if (_a[0]) *reinterpret_cast< bool*>(_a[0]) = std::move(_r); }  break;
        case 5: { QString _r = _t->readFile((*reinterpret_cast< const QString(*)>(_a[1])));
            if (_a[0]) *reinterpret_cast< QString*>(_a[0]) = std::move(_r); }  break;
        case 6: _t->test_native_mesh_rendering(); break;
        case 7: _t->test_triangular_mesh_rendering(); break;
        case 8: _t->test_vertex_scalar_dataset_rendering(); break;
        case 9: _t->test_vertex_vector_dataset_rendering(); break;
        case 10: _t->test_face_scalar_dataset_rendering(); break;
        case 11: _t->test_face_vector_dataset_rendering(); break;
        case 12: _t->test_vertex_scalar_dataset_with_inactive_face_rendering(); break;
        case 13: _t->test_face_vector_on_user_grid(); break;
        case 14: _t->test_vertex_vector_on_user_grid(); break;
        case 15: _t->test_signals(); break;
        default: ;
        }
    } else if (_c == QMetaObject::RegisterMethodArgumentMetaType) {
        switch (_id) {
        default: *reinterpret_cast<int*>(_a[0]) = -1; break;
        case 4:
            switch (*reinterpret_cast<int*>(_a[1])) {
            default: *reinterpret_cast<int*>(_a[0]) = -1; break;
            case 1:
                *reinterpret_cast<int*>(_a[0]) = qRegisterMetaType< QgsMeshLayer* >(); break;
            }
            break;
        }
    }
}

const QMetaObject TestQgsMeshRenderer::staticMetaObject = {
    { &QObject::staticMetaObject, qt_meta_stringdata_TestQgsMeshRenderer.data,
      qt_meta_data_TestQgsMeshRenderer,  qt_static_metacall, nullptr, nullptr}
};


const QMetaObject *TestQgsMeshRenderer::metaObject() const
{
    return QObject::d_ptr->metaObject ? QObject::d_ptr->dynamicMetaObject() : &staticMetaObject;
}

void *TestQgsMeshRenderer::qt_metacast(const char *_clname)
{
    if (!_clname) return nullptr;
    if (!strcmp(_clname, qt_meta_stringdata_TestQgsMeshRenderer.stringdata0))
        return static_cast<void*>(this);
    return QObject::qt_metacast(_clname);
}

int TestQgsMeshRenderer::qt_metacall(QMetaObject::Call _c, int _id, void **_a)
{
    _id = QObject::qt_metacall(_c, _id, _a);
    if (_id < 0)
        return _id;
    if (_c == QMetaObject::InvokeMetaMethod) {
        if (_id < 16)
            qt_static_metacall(this, _c, _id, _a);
        _id -= 16;
    } else if (_c == QMetaObject::RegisterMethodArgumentMetaType) {
        if (_id < 16)
            qt_static_metacall(this, _c, _id, _a);
        _id -= 16;
    }
    return _id;
}
QT_WARNING_POP
QT_END_MOC_NAMESPACE
