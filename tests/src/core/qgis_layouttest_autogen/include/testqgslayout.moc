/****************************************************************************
** Meta object code from reading C++ file 'testqgslayout.cpp'
**
** Created by: The Qt Meta Object Compiler version 67 (Qt 5.9.5)
**
** WARNING! All changes made in this file will be lost!
*****************************************************************************/

#include <QtCore/qbytearray.h>
#include <QtCore/qmetatype.h>
#if !defined(Q_MOC_OUTPUT_REVISION)
#error "The header file 'testqgslayout.cpp' doesn't include <QObject>."
#elif Q_MOC_OUTPUT_REVISION != 67
#error "This file was generated using the moc from 5.9.5. It"
#error "cannot be used with the include files from this version of Qt."
#error "(The moc has changed too much.)"
#endif

QT_BEGIN_MOC_NAMESPACE
QT_WARNING_PUSH
QT_WARNING_DISABLE_DEPRECATED
struct qt_meta_stringdata_TestQgsLayout_t {
    QByteArrayData data[33];
    char stringdata0[546];
};
#define QT_MOC_LITERAL(idx, ofs, len) \
    Q_STATIC_BYTE_ARRAY_DATA_HEADER_INITIALIZER_WITH_OFFSET(len, \
    qptrdiff(offsetof(qt_meta_stringdata_TestQgsLayout_t, stringdata0) + ofs \
        - idx * sizeof(QByteArrayData)) \
    )
static const qt_meta_stringdata_TestQgsLayout_t qt_meta_stringdata_TestQgsLayout = {
    {
QT_MOC_LITERAL(0, 0, 13), // "TestQgsLayout"
QT_MOC_LITERAL(1, 14, 12), // "initTestCase"
QT_MOC_LITERAL(2, 27, 0), // ""
QT_MOC_LITERAL(3, 28, 15), // "cleanupTestCase"
QT_MOC_LITERAL(4, 44, 4), // "init"
QT_MOC_LITERAL(5, 49, 7), // "cleanup"
QT_MOC_LITERAL(6, 57, 8), // "creation"
QT_MOC_LITERAL(7, 66, 5), // "units"
QT_MOC_LITERAL(8, 72, 4), // "name"
QT_MOC_LITERAL(9, 77, 16), // "customProperties"
QT_MOC_LITERAL(10, 94, 29), // "writeRetrieveCustomProperties"
QT_MOC_LITERAL(11, 124, 15), // "variablesEdited"
QT_MOC_LITERAL(12, 140, 5), // "scope"
QT_MOC_LITERAL(13, 146, 12), // "referenceMap"
QT_MOC_LITERAL(14, 159, 6), // "bounds"
QT_MOC_LITERAL(15, 166, 7), // "addItem"
QT_MOC_LITERAL(16, 174, 11), // "layoutItems"
QT_MOC_LITERAL(17, 186, 16), // "layoutItemByUuid"
QT_MOC_LITERAL(18, 203, 14), // "layoutItemById"
QT_MOC_LITERAL(19, 218, 16), // "undoRedoOccurred"
QT_MOC_LITERAL(20, 235, 11), // "itemsOnPage"
QT_MOC_LITERAL(21, 247, 16), // "shouldExportPage"
QT_MOC_LITERAL(22, 264, 11), // "pageIsEmpty"
QT_MOC_LITERAL(23, 276, 5), // "clear"
QT_MOC_LITERAL(24, 282, 12), // "georeference"
QT_MOC_LITERAL(25, 295, 5), // "clone"
QT_MOC_LITERAL(26, 301, 26), // "legendRestoredFromTemplate"
QT_MOC_LITERAL(27, 328, 36), // "legendRestoredFromTemplateAut..."
QT_MOC_LITERAL(28, 365, 34), // "attributeTableRestoredFromTem..."
QT_MOC_LITERAL(29, 400, 29), // "mapLayersRestoredFromTemplate"
QT_MOC_LITERAL(30, 430, 42), // "mapLayersStyleOverrideRestore..."
QT_MOC_LITERAL(31, 473, 30), // "atlasLayerRestoredFromTemplate"
QT_MOC_LITERAL(32, 504, 41) // "overviewStackingLayerRestored..."

    },
    "TestQgsLayout\0initTestCase\0\0cleanupTestCase\0"
    "init\0cleanup\0creation\0units\0name\0"
    "customProperties\0writeRetrieveCustomProperties\0"
    "variablesEdited\0scope\0referenceMap\0"
    "bounds\0addItem\0layoutItems\0layoutItemByUuid\0"
    "layoutItemById\0undoRedoOccurred\0"
    "itemsOnPage\0shouldExportPage\0pageIsEmpty\0"
    "clear\0georeference\0clone\0"
    "legendRestoredFromTemplate\0"
    "legendRestoredFromTemplateAutoUpdate\0"
    "attributeTableRestoredFromTemplate\0"
    "mapLayersRestoredFromTemplate\0"
    "mapLayersStyleOverrideRestoredFromTemplate\0"
    "atlasLayerRestoredFromTemplate\0"
    "overviewStackingLayerRestoredFromTemplate"
};
#undef QT_MOC_LITERAL

static const uint qt_meta_data_TestQgsLayout[] = {

 // content:
       7,       // revision
       0,       // classname
       0,    0, // classinfo
      31,   14, // methods
       0,    0, // properties
       0,    0, // enums/sets
       0,    0, // constructors
       0,       // flags
       0,       // signalCount

 // slots: name, argc, parameters, tag, flags
       1,    0,  169,    2, 0x08 /* Private */,
       3,    0,  170,    2, 0x08 /* Private */,
       4,    0,  171,    2, 0x08 /* Private */,
       5,    0,  172,    2, 0x08 /* Private */,
       6,    0,  173,    2, 0x08 /* Private */,
       7,    0,  174,    2, 0x08 /* Private */,
       8,    0,  175,    2, 0x08 /* Private */,
       9,    0,  176,    2, 0x08 /* Private */,
      10,    0,  177,    2, 0x08 /* Private */,
      11,    0,  178,    2, 0x08 /* Private */,
      12,    0,  179,    2, 0x08 /* Private */,
      13,    0,  180,    2, 0x08 /* Private */,
      14,    0,  181,    2, 0x08 /* Private */,
      15,    0,  182,    2, 0x08 /* Private */,
      16,    0,  183,    2, 0x08 /* Private */,
      17,    0,  184,    2, 0x08 /* Private */,
      18,    0,  185,    2, 0x08 /* Private */,
      19,    0,  186,    2, 0x08 /* Private */,
      20,    0,  187,    2, 0x08 /* Private */,
      21,    0,  188,    2, 0x08 /* Private */,
      22,    0,  189,    2, 0x08 /* Private */,
      23,    0,  190,    2, 0x08 /* Private */,
      24,    0,  191,    2, 0x08 /* Private */,
      25,    0,  192,    2, 0x08 /* Private */,
      26,    0,  193,    2, 0x08 /* Private */,
      27,    0,  194,    2, 0x08 /* Private */,
      28,    0,  195,    2, 0x08 /* Private */,
      29,    0,  196,    2, 0x08 /* Private */,
      30,    0,  197,    2, 0x08 /* Private */,
      31,    0,  198,    2, 0x08 /* Private */,
      32,    0,  199,    2, 0x08 /* Private */,

 // slots: parameters
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,

       0        // eod
};

void TestQgsLayout::qt_static_metacall(QObject *_o, QMetaObject::Call _c, int _id, void **_a)
{
    if (_c == QMetaObject::InvokeMetaMethod) {
        TestQgsLayout *_t = static_cast<TestQgsLayout *>(_o);
        Q_UNUSED(_t)
        switch (_id) {
        case 0: _t->initTestCase(); break;
        case 1: _t->cleanupTestCase(); break;
        case 2: _t->init(); break;
        case 3: _t->cleanup(); break;
        case 4: _t->creation(); break;
        case 5: _t->units(); break;
        case 6: _t->name(); break;
        case 7: _t->customProperties(); break;
        case 8: _t->writeRetrieveCustomProperties(); break;
        case 9: _t->variablesEdited(); break;
        case 10: _t->scope(); break;
        case 11: _t->referenceMap(); break;
        case 12: _t->bounds(); break;
        case 13: _t->addItem(); break;
        case 14: _t->layoutItems(); break;
        case 15: _t->layoutItemByUuid(); break;
        case 16: _t->layoutItemById(); break;
        case 17: _t->undoRedoOccurred(); break;
        case 18: _t->itemsOnPage(); break;
        case 19: _t->shouldExportPage(); break;
        case 20: _t->pageIsEmpty(); break;
        case 21: _t->clear(); break;
        case 22: _t->georeference(); break;
        case 23: _t->clone(); break;
        case 24: _t->legendRestoredFromTemplate(); break;
        case 25: _t->legendRestoredFromTemplateAutoUpdate(); break;
        case 26: _t->attributeTableRestoredFromTemplate(); break;
        case 27: _t->mapLayersRestoredFromTemplate(); break;
        case 28: _t->mapLayersStyleOverrideRestoredFromTemplate(); break;
        case 29: _t->atlasLayerRestoredFromTemplate(); break;
        case 30: _t->overviewStackingLayerRestoredFromTemplate(); break;
        default: ;
        }
    }
    Q_UNUSED(_a);
}

const QMetaObject TestQgsLayout::staticMetaObject = {
    { &QObject::staticMetaObject, qt_meta_stringdata_TestQgsLayout.data,
      qt_meta_data_TestQgsLayout,  qt_static_metacall, nullptr, nullptr}
};


const QMetaObject *TestQgsLayout::metaObject() const
{
    return QObject::d_ptr->metaObject ? QObject::d_ptr->dynamicMetaObject() : &staticMetaObject;
}

void *TestQgsLayout::qt_metacast(const char *_clname)
{
    if (!_clname) return nullptr;
    if (!strcmp(_clname, qt_meta_stringdata_TestQgsLayout.stringdata0))
        return static_cast<void*>(this);
    return QObject::qt_metacast(_clname);
}

int TestQgsLayout::qt_metacall(QMetaObject::Call _c, int _id, void **_a)
{
    _id = QObject::qt_metacall(_c, _id, _a);
    if (_id < 0)
        return _id;
    if (_c == QMetaObject::InvokeMetaMethod) {
        if (_id < 31)
            qt_static_metacall(this, _c, _id, _a);
        _id -= 31;
    } else if (_c == QMetaObject::RegisterMethodArgumentMetaType) {
        if (_id < 31)
            *reinterpret_cast<int*>(_a[0]) = -1;
        _id -= 31;
    }
    return _id;
}
QT_WARNING_POP
QT_END_MOC_NAMESPACE
